on:
  push:
name: Build and deploy GH Pages
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Initialize and update submodules
        run: |
          git submodule init
          git submodule update --recursive
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Run get_files.py
        run: python ./get_files.py
      - name: build_and_deploy
        uses: shalzz/zola-deploy-action@master
        env:
          # Target branch
          PAGES_BRANCH: gh-pages
          # Provide personal access token
          TOKEN: ${{ secrets.TOKEN }}
#
#
#
          # Or if publishing to the same repo, use the automatic token
          #TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.x'
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install tweepy atproto Misskey.py
#      - name: Post latest page to Twitter
#        env:
#          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
#          API_KEY: ${{ secrets.API_KEY }}
#          API_KEY_SECRET: ${{ secrets.API_KEY_SECRET }}
#          BS_PASS: ${{ secrets.BS_PASS }}
#          MISSKEY_TOKEN: ${{ secrets.MISSKEY_TOKEN }}
#        run: |
#            git fetch origin main
#            new_file=$(ls content/post/*.md | sort -t'/' -k3,3n -k2,2n -k1,1n | tail -n 1)
#            if [ -z "$new_file" ]; then
#              echo "No new .md file to tweet."
#              exit 0
#            fi
#            post_path="${new_file#content/post/}"
#            post_url="https://slnq.github.io/post/${post_path%.md}/"
#            second_line_content=$(awk -F'"' 'NR==2 {print $2}' "$new_file")
#            if [ -z "$second_line_content" ]; then
#              echo "No valid content in the second line of the file."
#              exit 0
#            fi
#            tweet_content="${second_line_content} ${post_url}"
#            echo "TWEET_CONTENT=$tweet_content" >> $GITHUB_ENV
#            export TWEET_CONTENT="$tweet_content"
#            python - <<EOF
#            import os
#            import tweepy
#            import atproto
#            from misskey import Misskey
#            print(f"API_KEY: {os.environ.get('API_KEY')}")
#            client = tweepy.Client(consumer_key=os.environ.get("API_KEY"),consumer_secret=os.environ.get("API_KEY_SECRET"),access_token=os.environ.get("ACCESS_TOKEN"),access_token_secret=os.environ.get("ACCESS_TOKEN_SECRET"))
#            tweet_text = f"{os.environ.get('TWEET_CONTENT')}"
#            print(f"Tweet Text: {tweet_text}")
#            client.create_tweet(text=tweet_text)
#            client = atproto.Client(base_url='https://bsky.social')
#            client.login(login='nsl.bsky.social',password=os.environ.get("BS_PASS"))
#            client.send_post(tweet_text)
#            api = Misskey('misskey.io')
#            api.token = os.environ.get("MISSKEY_TOKEN")
#            api.notes_create(text=tweet_text)
#            EOF